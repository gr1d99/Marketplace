version: '3.4'

services:
  marketplace-tyk:
    image: docker.tyk.io/tyk-gateway/tyk-gateway:latest
    networks: [ proxy ]
    build: .
    ports:
      - "9000:8080"
    volumes:
      - ./Infra/Gateway/tyk.conf.marketplace:/opt/tyk-gateway/tyk.conf
      - ./Infra/Gateway/apps:/opt/tyk-gateway/apps
      - ./Infra/Gateway/middleware:/opt/tyk-gateway/middleware
      - ./Infra/Gateway/certs:/opt/tyk-gateway/certs
  marketplace-api:
    networks: [ proxy ]
    image: ${DOCKER_REGISTRY-}marketplace.api
    container_name: Marketplace.Backend
    ports:
      - "5001:80"
      - "5002:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      # Mac
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ~/.aspnet/https:/https:ro
    build:
      context: .
      dockerfile: ./API/Marketplace.API/Dockerfile
    depends_on: 
      - marketplace-db
    restart: unless-stopped
  marketplace-db:
    user: root
    networks: [ proxy ]
    image:  ${DOCKER_REGISTRY-}marketplace.db
    container_name: Marketplace.Database
    build:
      context: ./API/Marketplace.Database
      dockerfile: Dockerfile
    environment:
      - MSSQL_PID=Express
    expose:
      - 1433
    ports:
      - "14332:1433"
    volumes:
      - sqlsystem:/var/opt/mssql/
      - sqldata:/var/opt/sqlserver/data
      - sqllog:/var/opt/sqlserver/log
      - sqlbackup:/var/opt/sqlserver/backup
    restart: unless-stopped
  redis:
    image: redis:4.0-alpine
    networks: [ proxy ]
    ports:
      - 6379:6379
    command: redis-server --appendonly yes
volumes:
  sqlsystem:
  sqldata:
  sqllog:
  sqlbackup:
networks:
  proxy:
    driver: bridge
