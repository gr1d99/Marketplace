{"version":3,"file":"elastic-apm-rum-angular.js","sources":["../../src/apm.module.ts","../../src/apm.service.ts","../../src/error-handler.ts","../../src/index.ts","../../src/elastic-apm-rum-angular.ts"],"sourcesContent":["/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nimport { InjectionToken, NgModule } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport { apm, ApmBase } from '@elastic/apm-rum'\n\nexport const APM = new InjectionToken<ApmBase>('APM Base Client')\n\n@NgModule({\n  imports: [RouterModule],\n  providers: [{ provide: APM, useValue: apm }]\n})\nexport class ApmModule {}\n","/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nimport { Router } from '@angular/router'\nimport { NavigationStart } from '@angular/router'\nimport { Inject, Injectable, NgZone } from '@angular/core'\nimport { afterFrame } from '@elastic/apm-rum-core'\nimport { ApmBase } from '@elastic/apm-rum'\nimport { AgentConfigOptions } from '@elastic/apm-rum'\nimport { APM } from './apm.module'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApmService {\n  constructor(\n    @Inject(APM) public apm: ApmBase,\n    private router: Router,\n    private readonly ngZone: NgZone\n  ) {}\n\n  init(config: AgentConfigOptions) {\n    const apmInstance = this.ngZone.runOutsideAngular(() =>\n      this.apm.init(config)\n    )\n\n    if (!apmInstance.isActive()) {\n      return apmInstance\n    }\n\n    /**\n     * Start listening to route change once we\n     * intiailize to set the correct transaction names\n     */\n    this.observe()\n    return apmInstance\n  }\n\n  observe() {\n    let transaction\n    this.router.events.subscribe(event => {\n      const eventName = event.toString()\n      if (eventName.indexOf('NavigationStart') >= 0) {\n        const name = (event as NavigationStart).url\n        transaction = this.apm.startTransaction(name, 'route-change', {\n          managed: true,\n          canReuse: true\n        })\n      } else if (eventName.indexOf('NavigationError') >= 0) {\n        transaction && transaction.detectFinish()\n      } else if (eventName.indexOf('NavigationEnd') >= 0) {\n        if (!transaction) {\n          return\n        }\n\n        /**\n         * The below logic must be placed in NavigationEnd since\n         * the we depend on the current route state to get the path\n         *\n         * Even If there are any redirects, the router state path\n         * will be matched with the correct url on navigation end\n         *\n         * Traverse the activated route tree to figure out the nested\n         * route path\n         */\n        const route = this.router.routerState.root.firstChild\n\n        if (route) {\n          let child = route\n          let path = '/' + child.routeConfig.path\n          while (child) {\n            child = child.firstChild\n            if (child && child.routeConfig) {\n              const currentPath = child.routeConfig.path\n              /**\n               * Ignore empty path's in the route config\n               */\n              if (currentPath) {\n                path += '/' + currentPath\n              }\n            }\n          }\n          transaction.name = path\n        }\n\n        afterFrame(() => transaction.detectFinish())\n      }\n    })\n  }\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nimport { ErrorHandler, Inject, Injectable } from '@angular/core'\nimport { ApmBase } from '@elastic/apm-rum'\nimport { APM } from './apm.module'\n\n@Injectable()\nexport class ApmErrorHandler extends ErrorHandler {\n  constructor(@Inject(APM) public apm: ApmBase) {\n    super()\n  }\n\n  handleError(error) {\n    this.apm.captureError(error.originalError || error)\n    super.handleError(error)\n  }\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2017-present, Elasticsearch BV\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\nexport * from './apm.module'\nexport * from './apm.service'\nexport * from './error-handler'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;MA6Ba,GAAG,GAAG,IAAI,cAAc,CAAU,iBAAiB,EAAC;MAMpD,SAAS;;sGAAT,SAAS;uGAAT,SAAS,YAHV,YAAY;uGAGX,SAAS,aAFT,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,YADnC,CAAC,YAAY,CAAC;2FAGZ,SAAS;kBAJrB,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC;iBAC7C;;;MCEY,UAAU;IACrB,YACsB,GAAY,EACxB,MAAc,EACL,MAAc;QAFX,QAAG,GAAH,GAAG,CAAS;QACxB,WAAM,GAAN,MAAM,CAAQ;QACL,WAAM,GAAN,MAAM,CAAQ;KAC7B;IAEJ,IAAI,CAAC,MAA0B;QAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAChD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CACtB,CAAA;QAED,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;YAC3B,OAAO,WAAW,CAAA;SACnB;;;;;QAMD,IAAI,CAAC,OAAO,EAAE,CAAA;QACd,OAAO,WAAW,CAAA;KACnB;IAED,OAAO;QACL,IAAI,WAAW,CAAA;QACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK;YAChC,MAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAA;YAClC,IAAI,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;gBAC7C,MAAM,IAAI,GAAI,KAAyB,CAAC,GAAG,CAAA;gBAC3C,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE,cAAc,EAAE;oBAC5D,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAA;aACH;iBAAM,IAAI,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;gBACpD,WAAW,IAAI,WAAW,CAAC,YAAY,EAAE,CAAA;aAC1C;iBAAM,IAAI,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE;gBAClD,IAAI,CAAC,WAAW,EAAE;oBAChB,OAAM;iBACP;;;;;;;;;;;gBAYD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAA;gBAErD,IAAI,KAAK,EAAE;oBACT,IAAI,KAAK,GAAG,KAAK,CAAA;oBACjB,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAA;oBACvC,OAAO,KAAK,EAAE;wBACZ,KAAK,GAAG,KAAK,CAAC,UAAU,CAAA;wBACxB,IAAI,KAAK,IAAI,KAAK,CAAC,WAAW,EAAE;4BAC9B,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAA;;;;4BAI1C,IAAI,WAAW,EAAE;gCACf,IAAI,IAAI,GAAG,GAAG,WAAW,CAAA;6BAC1B;yBACF;qBACF;oBACD,WAAW,CAAC,IAAI,GAAG,IAAI,CAAA;iBACxB;gBAED,UAAU,CAAC,MAAM,WAAW,CAAC,YAAY,EAAE,CAAC,CAAA;aAC7C;SACF,CAAC,CAAA;KACH;;uGA1EU,UAAU,kBAEX,GAAG;2GAFF,UAAU,cAFT,MAAM;2FAEP,UAAU;kBAHtB,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAGI,MAAM;2BAAC,GAAG;;;ACtCf;;;;;;;;;;;;;;;;;;;;;;;;MA8Ba,eAAgB,SAAQ,YAAY;IAC/C,YAAgC,GAAY;QAC1C,KAAK,EAAE,CAAA;QADuB,QAAG,GAAH,GAAG,CAAS;KAE3C;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,CAAA;QACnD,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;KACzB;;4GARU,eAAe,kBACN,GAAG;gHADZ,eAAe;2FAAf,eAAe;kBAD3B,UAAU;;0BAEI,MAAM;2BAAC,GAAG;;;AC/BzB;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;"}